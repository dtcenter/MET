////////////////////////////////////////////////////////////////////////////////
//
// Ensemble-Stat configuration file.
//
// For additional information, please see the MET User's Guide.
//
////////////////////////////////////////////////////////////////////////////////

//
// Output model name to be written
//
model = "WRF";

//
// Output description to be written
// May be set separately in each "obs.field" entry
//
desc = "NA";

//
// Output observation type to be written
//
obtype = "MC_PCP";

////////////////////////////////////////////////////////////////////////////////

//
// Verification grid
//
regrid = {
   to_grid    = NONE;
   method     = NEAREST;
   width      = 1;
   vld_thresh = 0.5;
   shape      = SQUARE;
}

////////////////////////////////////////////////////////////////////////////////

//
// IDs for ensemble members
// Only set if processing a single file with all ensembles
//
ens_member_ids = [];
control_id = "";

//
// May be set separately in each "fcst.field" and "obs.field" entry
//
censor_thresh = [];
censor_val    = [];
prob_cat_thresh = [];

//
// May be set separately in each "fcst.field" entry
//
prob_pct_thresh = [ ==0.25 ];

//
// May be set separately in each "obs.field" entry
//
nc_var_str  = "";
eclv_points = 0.05;

//
// Forecast and observation fields to be verified
//
fcst = {
   ens_thresh   = 1.0;
   vld_thresh   = 1.0;
   message_type = [ "ADPSFC" ];

   field = [
      {
         name  = "APCP";
         level = [ "A24" ];
         ens_ssvar_bin_size = 0.1;
         ens_phist_bin_size = 0.05;
         prob_cat_thresh = [ >0, >0.1, >0.25, >0.5, >1.0, >1.5, >2.0 ];
      }
   ];
}
obs = fcst;

////////////////////////////////////////////////////////////////////////////////

//
// Point observation filtering options
// May be set separately in each "obs.field" entry
//
message_type    = [];
sid_inc         = [];
sid_exc         = [];
obs_thresh      = [ NA ];
obs_quality_inc = [];
obs_quality_exc = [];
duplicate_flag  = NONE;
obs_summary     = NONE;
obs_perc_value  = 50;
skip_const      = FALSE;

//
// Observation error options
// Set dist_type to NONE to use the observation error table instead
// May be set separately in each "obs.field" entry
//
obs_error = {
   flag             = FALSE;
   dist_type        = NONE;
   dist_parm        = [];
   inst_bias_scale  = 1.0;
   inst_bias_offset = 0.0;
   min              = NA;
   max              = NA;
}

//
// Mapping of message type group name to comma-separated list of values
//
message_type_group_map = [
   { key = "SURFACE"; val = "ADPSFC,SFCSHP,MSONET";               },
   { key = "ANYAIR";  val = "AIRCAR,AIRCFT";                      },
   { key = "ANYSFC";  val = "ADPSFC,SFCSHP,ADPUPA,PROFLR,MSONET"; },
   { key = "ONLYSF";  val = "ADPSFC,SFCSHP";                      }
];

//
// Ensemble bin sizes
// May be set separately in each "obs.field" entry
//
ens_ssvar_bin_size = 1.0;
ens_phist_bin_size = 0.05;

////////////////////////////////////////////////////////////////////////////////

//
// Climatology data
//
climo_mean = {

   file_name = [];
   field     = [];

   regrid = {
      method     = NEAREST;
      width      = 1;
      vld_thresh = 0.5;
      shape      = SQUARE;
   }

   time_interp_method = DW_MEAN;
   day_interval       = 31;
   hour_interval      = 6;
}

climo_stdev = climo_mean;
climo_stdev = {
   file_name = [];
}

//
// May be set separately in each "obs.field" entry
//
climo_cdf = {
   cdf_bins    = 10;
   center_bins = FALSE;
   write_bins  = TRUE;
   direct_prob = FALSE;
}

////////////////////////////////////////////////////////////////////////////////

//
// Point observation time window
//
obs_window = {
   beg = -5400;
   end =  5400;
}

////////////////////////////////////////////////////////////////////////////////

//
// Verification masking regions
//
mask = {
   grid  = [ "FULL" ];
   poly  = [ "MET_BASE/poly/HMT_masks/huc4_1605_poly.nc",
             "MET_BASE/poly/HMT_masks/huc4_1803_poly.nc",
             "MET_BASE/poly/HMT_masks/huc4_1804_poly.nc",
             "MET_BASE/poly/HMT_masks/huc4_1805_poly.nc",
             "MET_BASE/poly/HMT_masks/huc4_1806_poly.nc" ];
   sid   = [];
   llpnt = [];
}

////////////////////////////////////////////////////////////////////////////////

//
// Confidence interval settings
//
ci_alpha  = [ 0.05 ];

////////////////////////////////////////////////////////////////////////////////

//
// Interpolation methods
//
interp = {
   field      = BOTH;
   vld_thresh = 1.0;
   shape      = SQUARE;

   type = [
      {
         method = NEAREST;
         width  = 1;
      },
      {
         method = HIRA;
         width  = 2;
      }
   ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Statistical output types
// May be set separately in each "obs.field" entry
//
output_flag = {
   ecnt  = BOTH;
   rps   = BOTH;
   rhist = BOTH;
   phist = BOTH;
   orank = BOTH;
   ssvar = BOTH;
   relp  = BOTH;
   pct   = BOTH;
   pstd  = BOTH;
   pjc   = BOTH;
   prc   = BOTH;
   eclv  = BOTH;
}

////////////////////////////////////////////////////////////////////////////////

//
// Gridded verification output types
// May be set separately in each "obs.field" entry
//
nc_orank_flag = {
   latlon    = TRUE;
   mean      = TRUE;
   raw       = TRUE;
   rank      = TRUE;
   pit       = TRUE;
   vld_count = TRUE;
   weight    = FALSE;
}

////////////////////////////////////////////////////////////////////////////////

//
// Random number generator
//
rng = {
   type = "mt19937";
   seed = "1";
}

////////////////////////////////////////////////////////////////////////////////

grid_weight_flag = NONE;
output_prefix    = "";
version          = "V11.0.0";

////////////////////////////////////////////////////////////////////////////////
