////////////////////////////////////////////////////////////////////////////////
//
// Point-Stat configuration file.
//
// For additional information, please see the MET User's Guide.
//
////////////////////////////////////////////////////////////////////////////////

//
// Output model name to be written
//
model = "NGAC";

//
// Output description to be written
// May be set separately in each "obs.field" entry
//
desc = "NA";

////////////////////////////////////////////////////////////////////////////////

//
// Verification grid
//
regrid = {
   to_grid    = NONE;
   method     = NEAREST;
   width      = 1;
   vld_thresh = 0.5;
}

////////////////////////////////////////////////////////////////////////////////

mpr_column  = [];
mpr_thresh  = [];
cat_thresh  = [ NA ];
cnt_thresh  = [ NA ];
//cnt_logic   = UNION;
wind_thresh = [ NA ];
//wind_logic  = UNION;
eclv_points = 0.05;

//
// Forecast and observation fields to be verified
//
fcst = {
   field = [
      {
        name       = "AOTK";
        level      = [ "L0-9" ];
      }
   ];

}

obs = {
   message_type    = [ "AERONET_AOD_MEAN_010000" ];
   sid_inc         = [];
   sid_exc         = [];
   obs_quality_inc = [];
   obs_quality_exc = [];
   
   field = [
      {
        name       = "AOD";
        level      = [ "L500" ];
        GRIB1_ptv  = 141;
      }
   ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Climatology mean data
//
climo_mean = {

   //
   // Climatology mean files.
   //
   file_name = [];

   //
   // field must be empty or the same length as fcst.field.
   //
   field = [];

   //
   // Method for regridding climatology data to the verification grid.
   //
   regrid = {
      method     = NEAREST;
      width      = 1;
      vld_thresh = 0.5;
   }

   //
   // Method for interpolating climatology to forecast valid time:
   //    NEAREST for data closest in time
   //    UW_MEAN for average of data before and after
   //    DW_MEAN for linear interpolation in time of data before and after
   //
   time_interp_method = DW_MEAN;
   day_interval       = 31;
   hour_interval      = 6;
}

////////////////////////////////////////////////////////////////////////////////

//
// Point observation time window
//
obs_window = {
   beg = 0;
   end = 0;
}

////////////////////////////////////////////////////////////////////////////////

//
// Verification masking regions
//
mask = {
   grid  = [ "FULL" ];
   poly  = [];
   sid   = [];
   llpnt = [];
}

////////////////////////////////////////////////////////////////////////////////

//
// Confidence interval settings
//
ci_alpha  = [ 0.05 ];

boot = {
   interval = PCTILE;
   rep_prop = 1.0;
   n_rep    = 1000;
   rng      = "mt19937";
   seed     = "1";
}

////////////////////////////////////////////////////////////////////////////////

//
// Interpolation methods
//
interp = {
   vld_thresh = 1.0;

   type = [
      {
         method = BILIN;
         width  = 2;
      }
   ];
}

////////////////////////////////////////////////////////////////////////////////

//
// HiRA verification method
//
hira = {
   flag            = FALSE;
   width           = [ 2, 3, 4, 5 ];
   vld_thresh      = 1.0;
   cov_thresh      = [ ==0.25 ];
   shape           = SQUARE;
   prob_cat_thresh = [];
}

////////////////////////////////////////////////////////////////////////////////

//
// Statistical output types
//
output_flag = {
   fho    = NONE;
   ctc    = NONE;
   cts    = NONE;
   mctc   = NONE;
   mcts   = NONE;
   cnt    = NONE;
   sl1l2  = NONE;
   sal1l2 = NONE;
   vl1l2  = NONE;
   val1l2 = NONE;
   vcnt   = NONE;
   pct    = NONE;
   pstd   = NONE;
   pjc    = NONE;
   prc    = NONE;
   ecnt   = NONE;
   orank  = NONE;
   rps    = NONE;
   eclv   = NONE;
   mpr    = STAT;
}

////////////////////////////////////////////////////////////////////////////////

duplicate_flag = NONE;
rank_corr_flag = TRUE;
tmp_dir        = "/tmp";
output_prefix  = "${OUTPUT_PREFIX}";
version        = "V11.0.0";

////////////////////////////////////////////////////////////////////////////////
