////////////////////////////////////////////////////////////////////////////////
//
// Grid-Stat configuration file.
//
// For additional information, please see the MET User's Guide.
//
////////////////////////////////////////////////////////////////////////////////

//
// Output model name to be written
//
model = "WRF";

//
// Output description to be written
// May be set separately in each "obs.field" entry
//
desc = "NA";

//
// Output observation type to be written
//
obtype = "ANALYS";

////////////////////////////////////////////////////////////////////////////////

//
// Verification grid
//
regrid = {
   to_grid    = NONE;
   method     = NEAREST;
   width      = 1;
   vld_thresh = 0.5;
   shape      = SQUARE;
}

////////////////////////////////////////////////////////////////////////////////

//
// May be set separately in each "field" entry
//
censor_thresh       = [];
censor_val          = [];
mpr_column          = [];
mpr_thresh          = [];
cat_thresh          = [];
cnt_thresh          = [ NA ];
cnt_logic           = UNION;
wind_thresh         = [ NA ];
wind_logic          = UNION;
eclv_points         = 0.05;
nc_pairs_var_name   = "";
nc_pairs_var_suffix = "";
hss_ec_value        = NA;
rank_corr_flag      = FALSE;

//
// Forecast and observation fields to be verified
//
fcst = {

   field = [
      { name = "TMP";   level = [ "Z2" ];  cat_thresh = [ <273, >=273     ];
                                           cnt_thresh = [ <273, >=273, NA ];
                                           cnt_logic  = INTERSECTION;        },
      { name = "DPT";   level = [ "Z2" ];  cat_thresh = [ <260, >=260 ];     },
      { name = "UGRD";  level = [ "Z10" ]; cat_thresh = [ <5, >=5 ];         },
      { name = "VGRD";  level = [ "Z10" ]; cat_thresh = [ <5, >=5 ];         },
      { name = "WIND";  level = [ "Z10" ]; cat_thresh = [ <5, >=5 ];         }
   ];

}
obs = fcst;

////////////////////////////////////////////////////////////////////////////////

//
// Verification masking regions
//
mask = {
   grid = [ "DTC165", "DTC166" ];
   poly = [ ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Confidence interval settings
//
ci_alpha  = [ 0.10, 0.05 ];

boot = {
   interval = PCTILE;
   rep_prop = 1.0;
   n_rep    = 0;
   rng      = "mt19937";
   seed     = "1";
}

////////////////////////////////////////////////////////////////////////////////

//
// Data smoothing methods
//
interp = {
   field      = FCST;
   vld_thresh = 1.0;
   shape      = SQUARE;

   type = [
      { method = NEAREST; width  = 1; },
      { method = UW_MEAN; width  = 3; },
      { method = MIN;     width  = 3; },
      { method = MAX;     width  = 3; }
   ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Neighborhood methods
//
nbrhd = {
   width      = [ 3, 5 ];
   cov_thresh = [ >=0.5 ];
   vld_thresh = 1.0;
   shape      = SQUARE;
}

////////////////////////////////////////////////////////////////////////////////

//
// Fourier decomposition
//
fourier = {
   wave_1d_beg = [];
   wave_1d_end = [];
}

////////////////////////////////////////////////////////////////////////////////

//
// Gradient statistics
// May be set separately in each "obs.field" entry
//
gradient = {
   dx = [ 1 ];
   dy = [ 1 ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Distance Map statistics
// May be set separately in each "obs.field" entry
//
distance_map = {
   baddeley_p        = 2;
   baddeley_max_dist = NA;
   fom_alpha         = 0.1;
   zhu_weight        = 0.5;
   beta_value(n)     = n * n / 2.0;
}

////////////////////////////////////////////////////////////////////////////////

//
// Statistical output types
//
output_flag = {
   fho    = BOTH;
   ctc    = BOTH;
   cts    = BOTH;
   mctc   = NONE;
   mcts   = NONE;
   cnt    = BOTH;
   sl1l2  = BOTH;
   sal1l2 = NONE;
   vl1l2  = BOTH;
   val1l2 = NONE;
   vcnt   = BOTH;
   pct    = NONE;
   pstd   = NONE;
   pjc    = NONE;
   prc    = NONE;
   eclv   = BOTH;
   nbrctc = BOTH;
   nbrcts = BOTH;
   nbrcnt = BOTH;
   grad   = NONE;
   dmap   = NONE;
}

//
// NetCDF matched pairs output file
//
nc_pairs_flag = {
   latlon       = TRUE;
   raw          = TRUE;
   diff         = TRUE;
   climo        = TRUE;
   climo_cdp    = FALSE;
   weight       = FALSE;
   nbrhd        = TRUE;
   fourier      = FALSE;
   gradient     = FALSE;
   distance_map = FALSE;
   apply_mask   = TRUE;
}

////////////////////////////////////////////////////////////////////////////////

grid_weight_flag = NONE;
tmp_dir          = "/tmp";
output_prefix    = "${OUTPUT_PREFIX}";
version          = "V11.0.0";

////////////////////////////////////////////////////////////////////////////////
