name: SonarQube Static Code Analysis

# Run SonarQube for Pull Requests and changes to the develop and main_vX.Y branches

on:

  # Trigger analysis for pushes to develop and main_vX.Y branches
  # TODO: Remove feature_2379_sonarqube_gha prior to submitting PR
  push:
    branches:
      - develop
      - 'main_v**'
      - feature_2379_sonarqube_gha
    paths-ignore:
      - 'docs/**'
      - '.github/pull_request_template.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/labels/**'
      - '**/README.md'
      - '**/LICENSE.md'

  # Trigger analysis for pull requests to develop and main_vX.Y branches
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - 'main_v**'
    paths-ignore:
      - 'docs/**'
      - '.github/pull_request_template.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/labels/**'
      - '**/README.md'
      - '**/LICENSE.md'

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          # Disable shallow clones for better analysis
          fetch-depth: 0

      - name: Create directories to store output
        run: mkdir -p ${RUNNER_WORKSPACE}/logs

      - name: Get branch name
        id: get_branch_name
        run: echo branch_name=${GITHUB_REF#refs/heads/} >> $GITHUB_OUTPUT

      - name: Compile MET with SonarQube
        run: .github/jobs/build_sonarqube_image.sh
        env:
          MET_BASE_REPO: met-base
          MET_BASE_TAG: v3.2
          SOURCE_BRANCH: ${{ steps.get_branch_name.outputs.branch_name }}
          MET_CONFIG_OPTS: '--enable-all'
          # Sonar Version Information:
          #   https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/
          SONAR_SCANNER_VERSION: 5.0.1.3006
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Copy all build log files into logs directory
        if: always()
        run: cp ${GITHUB_WORKSPACE}/*.log ${RUNNER_WORKSPACE}/logs/

      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs_compile
          path: ${{ runner.workspace }}/logs
          if-no-files-found: ignore
